// ------------------------------------------------------------
// 游늭 ARQUIVO: usuarioRoutes.js
// 游늷 Fun칞칚o: Definir as rotas relacionadas aos usu치rios (cadastro e login)
// ------------------------------------------------------------

// Importa o Express e cria um roteador
const express = require("express");
const router = express.Router();

// Importa o controller respons치vel pela l칩gica de usu치rios
const usuarioController = require("../controller/usuarioController");

// ------------------------------------------------------------
// 游녻 ROTAS DE USU츼RIOS
// ------------------------------------------------------------

/**
 * 游댳 Rota: POST /
 * Objetivo: Cadastrar um novo usu치rio no sistema.
 * Exemplo: POST http://localhost:8081/usuarios
 * Corpo esperado (JSON):
 * {
 *   "nome": "Jo칚o Silva",
 *   "email": "joao@email.com",
 *   "senha": "123456"
 * }
 */
router.post("/", usuarioController.cadastrar);

/**
 * 游댳 Rota: POST /login
 * Objetivo: Realizar o login de um usu치rio existente.
 * Caso o login seja bem-sucedido, o sistema gera um token JWT.
 * Exemplo: POST http://localhost:8081/usuarios/login
 * Corpo esperado (JSON):
 * {
 *   "email": "joao@email.com",
 *   "senha": "123456"
 * }
 */
router.post("/login", usuarioController.login);

// ------------------------------------------------------------
// 九괦잺 EXPORTA칂츾O
// ------------------------------------------------------------

// Exporta o roteador para ser utilizado no arquivo principal da aplica칞칚o (app.js)
module.exports = router;
